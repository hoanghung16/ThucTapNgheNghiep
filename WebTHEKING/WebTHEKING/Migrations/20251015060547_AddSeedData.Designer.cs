// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTHEKING.Data;

#nullable disable

namespace WebTHEKING.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251015060547_AddSeedData")]
    partial class AddSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebTHEKING.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebTHEKING.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WebTHEKING.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Apple",
                            Description = "Hiệu năng ổn định",
                            ImageUrl = "/img/9.jpg",
                            Name = "Iphone 13",
                            Price = 12890000m,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "Apple",
                            Description = "Camera cải tiến",
                            ImageUrl = "/img/19.jpg",
                            Name = "Iphone 14",
                            Price = 13790000m,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Category = "Apple",
                            Description = "Thiết kế mới với Dynamic Island",
                            ImageUrl = "/img/10.jpg",
                            Name = "Iphone 15",
                            Price = 15390000m,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Category = "Samsung",
                            Description = "Sức mạnh nhiếp ảnh đỉnh cao",
                            ImageUrl = "/img/20.jpg",
                            Name = "SamSung S25",
                            Price = 12500000m,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Category = "tainghe",
                            Description = "Chống ồn chủ động",
                            ImageUrl = "/img/11.jpg",
                            Name = "Airpods Pro 3",
                            Price = 6790000m,
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            Category = "tainghe",
                            Description = "Âm thanh Hi-Fi",
                            ImageUrl = "/img/12.jpg",
                            Name = "AirPods Max USB C",
                            OriginalPrice = 13790000m,
                            Price = 12990000m,
                            Type = 2
                        },
                        new
                        {
                            Id = 7,
                            Category = "oplung",
                            Description = "Bảo vệ toàn diện",
                            ImageUrl = "/img/21.jpg",
                            Name = "Ốp lưng MagSafe JINYA",
                            Price = 550000m,
                            Type = 2
                        },
                        new
                        {
                            Id = 8,
                            Category = "daysac",
                            Description = "Sạc nhanh an toàn",
                            ImageUrl = "/img/26.jpg",
                            Name = "Cáp Type C",
                            OriginalPrice = 220000m,
                            Price = 200000m,
                            Type = 2
                        });
                });

            modelBuilder.Entity("WebTHEKING.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@theking.com",
                            FullName = "Quản Trị Viên",
                            PasswordHash = "AQAAAAEAACcQAAAAE... (Đây là một chuỗi hash mẫu)",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "customer@email.com",
                            FullName = "Khách Hàng A",
                            PasswordHash = "AQAAAAEAACcQAAAAE... (Đây là một chuỗi hash mẫu)",
                            Role = "Customer",
                            Username = "customer"
                        });
                });

            modelBuilder.Entity("WebTHEKING.Models.Order", b =>
                {
                    b.HasOne("WebTHEKING.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebTHEKING.Models.OrderDetail", b =>
                {
                    b.HasOne("WebTHEKING.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebTHEKING.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebTHEKING.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
